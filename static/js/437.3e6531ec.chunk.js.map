{"version":3,"file":"static/js/437.3e6531ec.chunk.js","mappings":"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","sources":["components/pages/singleComicPage/singleComicPage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport useMarvelService from \"../../../services/useMarvelService\";\r\nimport setContent from \"../../../utils/setContent\";\r\nimport AppBanner from \"../../appBanner/AppBanner\";\r\n\r\nimport \"./singleComicPage.scss\";\r\n\r\nconst SingleComicPage = props => {\r\n  const { comicId } = useParams();\r\n  const [comic, setComic] = useState(null);\r\n  const { getComic, clearError, process, setProcess } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateComic();\r\n    // eslint-disable-next-line\r\n  }, [comicId]);\r\n\r\n  const updateComic = () => {\r\n    if (!comicId) {\r\n      return;\r\n    }\r\n    clearError();\r\n    getComic(comicId)\r\n      .then(onComicLoaded)\r\n      .then(() => setProcess(\"confirmed\"));\r\n  };\r\n\r\n  const onComicLoaded = comic => {\r\n    setComic(comic);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      {setContent(process, View, comic)}\r\n    </>\r\n  );\r\n};\r\n\r\nconst View = ({ data }) => {\r\n  const { title, description, pageCount, thumbnail, language, price } = data;\r\n  return (\r\n    <div className=\"single-comic\">\r\n      <Helmet>\r\n        <title>{title}</title>\r\n        <meta name=\"description\" content={`${title} comic page`} />\r\n      </Helmet>\r\n      <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{title}</h2>\r\n        <p className=\"single-comic__descr\">{description}</p>\r\n        <p className=\"single-comic__descr\">{pageCount}</p>\r\n        <p className=\"single-comic__descr\">Language: {language}</p>\r\n        <div className=\"single-comic__price\">{price}</div>\r\n      </div>\r\n      <Link to=\"/comics\" className=\"single-comic__back\">\r\n        Back to all\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleComicPage;\r\n","import \"./skeleton.scss\";\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className=\"char__select\">\n        Please select a character to see information\n      </p>\n      <div className=\"skeleton\">\n        <div className=\"pulse skeleton__header\">\n          <div className=\"pulse skeleton__circle\"></div>\n          <div className=\"pulse skeleton__mini\"></div>\n        </div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default Skeleton;\n","import ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\";\r\nimport Spinner from \"../components/spinner/Spinner\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case \"waiting\":\r\n      return <Skeleton />;\r\n    case \"loading\":\r\n      return <Spinner />;\r\n    case \"confirmed\":\r\n      return <Component data={data} />;\r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error(\"Unexpected process state\");\r\n  }\r\n};\r\n\r\nexport default setContent;\r\n"],"names":["View","_ref","data","title","description","pageCount","thumbnail","language","price","_jsxs","className","children","Helmet","_jsx","name","content","concat","src","alt","Link","to","props","comicId","useParams","_useState","useState","_useState2","_slicedToArray","comic","setComic","_useMarvelService","useMarvelService","getComic","clearError","process","setProcess","useEffect","updateComic","then","onComicLoaded","_Fragment","AppBanner","setContent","Component","Skeleton","Spinner","ErrorMessage","Error"],"sourceRoot":""}