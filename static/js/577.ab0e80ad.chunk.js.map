{"version":3,"file":"static/js/577.ab0e80ad.chunk.js","mappings":"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","sources":["components/charInfo/CharInfo.js","components/charList/CharList.js","components/errorBoundary/ErrorBoundary.js","components/randomChar/RandomChar.js","components/pages/MainPage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nimport PropTypes from \"prop-types\";\n\nimport \"./charInfo.scss\";\n\nconst CharInfo = props => {\n  const [char, setChar] = useState(null);\n\n  const { getCharacter, clearError, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    // eslint-disable-next-line\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId)\n      .then(onCharLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n\n  return <div className=\"char__info\">{setContent(process, View, char)}</div>;\n};\n\nconst View = ({ data }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = data;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n      \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ||\n    thumbnail ===\n      \"http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt=\"abyss\" style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"No comics\"}\n        {comics.map((comicsItem, i) => {\n          // eslint-disable-next-line\n          if (i > 9) return;\n          return (\n            <li className=\"char__comics-item\" key={i}>\n              <a href={comicsItem.resourceURI}>{comicsItem.name}</a>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import PropTypes from \"prop-types\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\n\nimport \"./charList.scss\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Spinner />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpected process state\");\n  }\n};\n\nconst CharList = props => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { getAllCharacters, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset)\n      .then(onCharListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onCharListLoaded = newCharList => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList(charList => [...charList, ...newCharList]);\n    setNewItemLoading(false);\n    setOffset(offset => offset + 9);\n    setCharEnded(ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = id => {\n    itemRefs.current.forEach(item =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  // Этот метод создан для оптимизации,\n  // чтобы не помещать такую конструкцию в метод render\n  const renderItems = arr => {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n          \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ||\n        item.thumbnail ===\n          \"http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          key={item.id}\n          tabIndex={0}\n          ref={el => (itemRefs.current[i] = el)}\n          onClick={() => {\n            focusOnItem(i);\n            props.onCharSelected(item.id);\n          }}\n          onKeyDown={e => {\n            if (e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    // А эта конструкция вынесена для центровки спиннера/ошибки\n    return <ul className=\"char__grid\">{items}</ul>;\n  };\n\n  const elements = useMemo(() => {\n    return setContent(process, () => renderItems(charList), newItemLoading);\n    // eslint-disable-next-line\n  }, [process]);\n\n  return (\n    <div className=\"char__list\">\n      {elements}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        onClick={() => onRequest(offset, false)}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import React, { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { useEffect, useState } from \"react\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nimport \"./randomChar.scss\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState({});\n\n  const { getCharacter, clearError, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    let timer = setInterval(updateChar, 6000);\n    return () => {\n      clearInterval(timer);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id)\n      .then(onCharLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  return (\n    <div className=\"randomchar\">\n      {setContent(process, View, char)}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button className=\"button button__main\" onClick={updateChar}>\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ data }) => {\n  const { name, description, thumbnail, homepage, wiki } = data;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n      \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ||\n    thumbnail ===\n      \"http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={imgStyle}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport CharList from \"../charList/CharList\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\n\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = id => {\r\n    setChar(id);\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Marvel Heroes</title>\r\n        <meta name=\"description\" content=\"Marvel Heroes page\" />\r\n      </Helmet>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import \"./skeleton.scss\";\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className=\"char__select\">\n        Please select a character to see information\n      </p>\n      <div className=\"skeleton\">\n        <div className=\"pulse skeleton__header\">\n          <div className=\"pulse skeleton__circle\"></div>\n          <div className=\"pulse skeleton__mini\"></div>\n        </div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default Skeleton;\n","import ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\";\r\nimport Spinner from \"../components/spinner/Spinner\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case \"waiting\":\r\n      return <Skeleton />;\r\n    case \"loading\":\r\n      return <Spinner />;\r\n    case \"confirmed\":\r\n      return <Component data={data} />;\r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error(\"Unexpected process state\");\r\n  }\r\n};\r\n\r\nexport default setContent;\r\n"],"names":["View","_ref","data","name","description","thumbnail","homepage","wiki","comics","imgStyle","objectFit","_jsxs","_Fragment","children","className","_jsx","src","alt","style","href","length","map","comicsItem","i","resourceURI","props","_useState","useState","_useState2","_slicedToArray","char","setChar","_useMarvelService","useMarvelService","getCharacter","clearError","process","setProcess","useEffect","updateChar","charId","then","onCharLoaded","setContent","charList","setCharList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","concat","_toConsumableArray","itemRefs","useRef","focusOnItem","id","current","forEach","item","classList","remove","add","focus","elements","useMemo","Component","Spinner","ErrorMessage","Error","arr","items","tabIndex","ref","el","onClick","onCharSelected","onKeyDown","e","key","renderItems","disabled","display","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","state","error","_createClass","value","errorInfo","console","log","this","setState","timer","setInterval","clearInterval","Math","floor","random","mjolnir","selectedChar","Helmet","content","RandomChar","CharList","CharInfo","decoration","Skeleton"],"sourceRoot":""}